<!DOCTYPE html>
<!-- (C) 2022 uchicom -->
<html lang="ja">
<head>
<script src="/sample/js/anko.js"></script>
<script src="/sample/js/anko-validator.js"></script>
<meta name=viewport content="width=device-width, initial-scale=1">
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<meta http-equiv="content-script-type" content="text/javascript">
<meta http-equiv="content-style-type" content="text/css">
<meta name="author" content="uchicom">
<meta name="keywords" content="anko.js">
<meta name="description" content="anko-validator.jsのサンプルプロジェクト">
<title>anko-validator.jsのサンプルプロジェクト</title>
<script>
initValidation();
window.addEventListener("load", dispLogin);

// サーバが作成するjsファイル
function initValidation() {
    const validationHash='$hash';
    const validationJson = {login : {
        id : {required:{message:"必須です"}},
        pass : {required:{message:"必須です"}}
    }};
    if (validationHash != localStorage.getItem('validationHash')) {
        localStorage.setItem('validationHash', validationHash);
        localStorage.setItem('validation', JSON.stringify(validationJson));
    }
}
// labelに必須とかつける場合common.jsとかに定義
const labelConsumer = label => {
  if (label && !label.querySelector("span[class=\"required\"]")) {
    label.appendChild(createRequireTag());
  }
};
function createRequireTag() {
	const span = create("span");
	span.setAttribute("class", "required");
	span.appendChild(text("必須"));
	return span;
}

function dispLogin() {
    replaceValidateTemplate("article", "login");
}
function login() {
    getJson("/sample/json/login.json", null, null, null, dispSample);
}
const dispSample = () => {
    replaceTemplate("article", "sampleTemplate");
    searchSample();
}
function searchSample() {
    getJson("/sample/json/search.json", null, null, null, records => {
        const tbody = create("tbody");
        for (let i = 0; i < records.length; i++) {
            const record = records[i];
            const row = createRow("sampleTemplate");
            const cols = row.querySelectorAll("td");
            cols[0].append(record.id);
            cols[1].append(record.name);
            tbody.append(row);
        }
        querySelector("#content tbody").replaceWith(tbody);
    });
}
function logout() {
    dispLogin();
}
</script>
<style>
.required {
	font-size:0.5em;
	font-weight: bold;
	margin-left: 1em;
	float: right;
	color: red;
}

input:invalid,select:invalid,textarea:invalid {
	border-color: pink;
}
</style>
</head>
<body>
    <div id="article"></div>
</body>
<template id="login">
    <div id="article">
        <h2>ログイン画面</h2>
        <div id="content">
            <form id="login" onsubmit="event.preventDefault()">
                <table>
                    <tbody>
                        <tr><th><label for="id">ID</label></th><td><input type="email" id="id" name="id"></td></tr>
                        <tr><th><label for="pass">PASSWORD</label></th><td><input type="password" id="pass" name="pass"></td></tr>
                        <tr><td colspan="2" style="text-align: right;"><button onclick="login()">ログイン</button></td></tr>
                    </tbody>
                </table>
            </form>
        </div>
    </div>
</template>
<template id="sampleTemplate">
    <div id="article">
        <nav><button onclick="logout()">ログアウト</button></li></ul></nav>
        <div id="content">
            <h2>サンプル機能画面</h2>
            <table>
                <thead>
                    <th>ID</th><th>NAME</th>
                </thead>
                <tbody>
                </tbody>
                <template id="sampleTemplate.row">
                    <tr><td></td><td></td></tr>
                </template>
            </table>
        </div>
    </div>
</template>
</html>
