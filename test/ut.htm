<html lang="ja">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<meta http-equiv="content-script-type" content="text/javascript">
<meta http-equiv="content-style-type" content="text/css">
<script src="/sample/js/anko.js"></script>
<script src="/test/js/anko-ut.js"></script>
<title>単体テスト</title>
<style>
  html, body, iframe {
    padding: 0;
    margin: 0;
    border: none;
    height: 100%;
    width: 100%;
  }
</style>
<script>
window.onload = () => ut("/sample/index.htm", "/test/js/anko-mock.js", tests, () => report());

function report() {
  const report = createClone("reportTemplate");
  const tbody = report.querySelector("tbody");
  let totalOk = 0;
  let total = 0;
  for (let i = 0; i < tests.length; i++) {
    const test = tests[i].path;
    if (!test) continue;
    let ok = 0;
    let ng = 0;
    let keys = Object.keys(test);
    for (let i = 0; i < keys.length; i++) {
      const pathData = test[keys[i]];
      if (!pathData.assert) continue;
      total += pathData.assert.length;
      const results = pathData.result;
      if (!results) continue;
      for (let j = 0; j < results.length; j++) {
        if (results[j]) {
          ok++;
        } else {
          ng++;
        }
      }
    }
    totalOk += ok;
    var row = createRow('reportTemplate', report);
    var cols = row.querySelectorAll("td");
    cols[0].append(tests[i].name);
    cols[1].append(ok > 0 && ng == 0 ? "OK" : `OK: ${ok}, NG: ${ng}`);
	  tbody.append(row);
  }
  const aggregate = `（OK: ${totalOk} / ${total}）`;
  report.querySelector("h2").append(aggregate);
  document.title += aggregate;
  document.body.append(report);
};
const tests = [{
    name: "ログイン",
    action: ifWindow => {
      ifWindow.set("#login", {
        id: "test@test",
        pass: "test"
      });
      ifWindow.login();
    },
    path: {
      '/sample/json/login.json': {
        mock: {token: "abc"},
        assert: [
          payload=>payload.id == "test@test",
          payload=>payload.pass == "test"
        ]
      },
      '/sample/json/search.json': {
        mock: [{"id": 1, "name": "テスト一郎"}, {"id": 2, "name": "テスト二郎"}],
        assert: [
          (payload,ifWindow) => ifWindow.querySelectorAll("#content tbody td")[0].textContent == "1",
          (payload,ifWindow) => ifWindow.querySelectorAll("#content tbody td")[1].textContent == "テスト一郎",
          (payload,ifWindow) => ifWindow.querySelectorAll("#content tbody td")[2].textContent == "2",
          (payload,ifWindow) => ifWindow.querySelectorAll("#content tbody td")[3].textContent == "テスト二郎"
        ]
      }
    },
  },
  {
    name: "ログアウト",
    action: ifWindow=>ifWindow.logout(),
  }
]
</script>
</head>
<body>
</body>
<template id="aggregateTemplate">
  <h2>集計結果</h2>
  <table class="uk-table uk-table-divider">
    <thead>
      <tr>
        <th>合計</th>
        <th>OK</th>
        <th>NG</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td></td>
        <td></td>
        <td></td>
      </tr>
    </tbody>
  </table>
</template>
<template id="reportTemplate">
  <h2>テスト結果</h2>
  <table class="uk-table uk-table-divider">
  <tr>
    <th>テスト</th>
    <th>結果</th>
  </tr>
  <tbody></tbody>
  <template id="reportTemplate.row">
    <tr>
      <td></td>
      <td></td>
    </tr>
  </template>
</table>
</template>
</html>